---
import { ClientRouter } from "astro:transitions";
import { SITE } from "@/config";
// import "@/styles/global.css";
// import "@/styles/view-transitions.css";
import CustomLoadingIndicator from "@/components/CustomLoadingIndicator.astro";
import ThemeProvider from "@/components/ThemeProvider.astro";
import globalCssHref from "../styles/global.css?url&no-inline";
// import toggleThemeSrc from '../scripts/common/toggle-theme.js?url';
import ScrollUpBtn from "@/components/ScrollUpBtn.astro";

// const googleSiteVerification = import.meta.env.PUBLIC_GOOGLE_SITE_VERIFICATION;

export interface Props {
  title?: string;
  metadata_title?: string;
  author?: string | null;
  profile?: string;
  description?: string;
  ogImage?: string;
  canonicalURL?: string;
  pubDatetime?: Date | null;
  modDatetime?: Date | null;
  scrollSmooth?: boolean;
}

const {
  title = SITE.title,
  metadata_title = title,
  author = SITE.author,
  profile = SITE.profile,
  description = SITE.desc,
  ogImage = SITE.ogImage ? `/${SITE.ogImage}` : "/og.png",
  canonicalURL = new URL(Astro.url.pathname, Astro.url),
  pubDatetime,
  modDatetime,
  scrollSmooth = false,
} = Astro.props;

const socialImageURL = new URL(ogImage, Astro.url);

// const structuredData = {
//   "@context": "https://schema.org",
//   "@type": "BlogPosting",
//   headline: `${title}`,
//   image: `${socialImageURL}`,
//   datePublished: `${pubDatetime?.toISOString()}`,
//   ...(modDatetime && { dateModified: modDatetime.toISOString() }),
//   author: [
//     {
//       "@type": "Person",
//       name: `${author}`,
//       ...(profile && { url: profile }),
//     },
//   ],
// };
---

<!doctype html>
<html lang=`${SITE.lang ?? "en"}` class={`${scrollSmooth && "scroll-smooth"}`}>
  <head>
    <ThemeProvider />

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="canonical" href={canonicalURL} />
    <!-- <meta name="generator" content={Astro.generator} /> -->

    <!-- General Meta Tags -->
    <title>{metadata_title}</title>
    <meta name="title" content={metadata_title} />
    <meta name="description" content={description} />
    <!-- <meta name="author" content={author} /> -->
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={metadata_title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={metadata_title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <!-- Article Published/Modified time -->
    <!-- {
      pubDatetime && (
        <meta
          property="article:published_time"
          content={pubDatetime.toISOString()}
        />
      )
    }
    {
      modDatetime && (
        <meta
          property="article:modified_time"
          content={modDatetime.toISOString()}
        />
      )
    } -->

    <!-- Google JSON-LD Structured data -->
    <!-- <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify(structuredData)}
    /> -->

    <!-- Enable RSS feed auto-discovery  -->
    <!-- https://docs.astro.build/en/recipes/rss/#enabling-rss-feed-auto-discovery -->
    <!-- <link
      rel="alternate"
      type="application/rss+xml"
      title={SITE.title}
      href={new URL("rss.xml", Astro.site)}
    /> -->

    <!-- {
      // If PUBLIC_GOOGLE_SITE_VERIFICATION is set in the environment variable,
      // include google-site-verification tag in the heading
      // Learn more: https://support.google.com/webmasters/answer/9008080#meta_tag_verification&zippy=%2Chtml-tag
      googleSiteVerification && (
        <meta
          name="google-site-verification"
          content={googleSiteVerification}
        />
      )
    } -->

    <!-- <script is:inline src={toggleThemeSrc}></script> -->
    <link rel="stylesheet" href={globalCssHref} />

    <ClientRouter />

    <!-- Favicons -->
    <link rel="icon" href="data:," />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/favicons/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/favicons/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/favicons/favicon-16x16.png"
    />
    <link rel="manifest" href="/favicons/site.webmanifest" />
    <link
      rel="mask-icon"
      href="/favicons/safari-pinned-tab.svg"
      color="#000000"
    />
    <link rel="shortcut icon" href="/favicons/favicon.ico" />

    <!-- <meta name="msapplication-TileColor" content="#ffffff" /> -->
    <meta name="msapplication-config" content="/favicons/browserconfig.xml" />
    <!-- <meta
      name="theme-color"
      content="#f9f8f4"
      media="(prefers-color-scheme: light)"
    />
    <meta
      name="theme-color"
      content="#1e1e1e"
      media="(prefers-color-scheme: dark)"
    /> -->
    
    <CustomLoadingIndicator />
  </head>
  <!-- <body transition:animate="fade"> -->
  <body>
    <!-- <script>0</script> -->

    <ScrollUpBtn />

    <slot />

    <script is:inline>
      // Added is:inline to ensure it's processed correctly by Astro
      // Check if the device supports touch events
      function isTouchDevice() {
        // Ensure window is defined (for SSR safety, though less critical for is:inline)
        return (
          typeof window !== "undefined" &&
          ("ontouchstart" in window || navigator.maxTouchPoints > 0)
        );
      }

      // Function to handle touch interactions
      function handleTouchInteractions() {
        // Get all interactive elements currently on the page
        const interactiveElements = document.querySelectorAll(
          ".link-interaction-effect, .link-interaction-underline-effect, .header-logo-svg, .header-logo-text, .header-navmenu-hover, .scroll-up-btn, .home-page-action-btn, .card-btn, .course-card, .copy-code, .post-navigation-block"
        );

        // Add event listeners for touch devices
        interactiveElements.forEach(element => {
          // --- Cleanup potential old listeners (optional but good practice) ---
          // If we previously stored handlers, remove them. Requires storing handlers.
          // For simplicity here, we'll rely on elements being replaced by Astro,
          // but be aware this might add duplicate listeners if elements persist across navigations.

          // --- Add new listeners ---
          const touchStartHandler = () => {
            element.classList.add("touch");
          };
          const touchEndHandler = () => {
            setTimeout(() => {
              element.classList.remove("touch");
            }, 500);
          };

          element.addEventListener("touchstart", touchStartHandler, {
            passive: true,
          }); // Use passive for potential scroll performance
          element.addEventListener("touchend", touchEndHandler);

          // Optional: Store handlers for potential future removal if needed
          // element._touchStartHandler = touchStartHandler;
          // element._touchEndHandler = touchEndHandler;
        });
      }

      // Function to initialize touch interactions
      function initializeTouchInteractions() {
        if (isTouchDevice()) {
          handleTouchInteractions();
        }
      }

      // Run on initial load
      initializeTouchInteractions();

      // Run after Astro navigations
      document.addEventListener("astro:page-load", initializeTouchInteractions);
    </script>
    <!-- <script src="../scripts/common/toggle-theme.js"></script> -->
    <script src="../scripts/common/course-sub-menu.js"></script>
    <script src="../scripts/common/navbar-menu.js"></script>
    <script src="../scripts/common/scroll-handler.js"></script>
    <script src="../scripts/common/data.js"></script>
    <script src="../scripts/specific/attach-copy-buttons.js"></script>
    <script src="../scripts/common/instant-page.js"></script>

    <!-- <noscript
      ><style>
        body {
          visibility: visible;
        }
      </style></noscript
    > -->
  </body>
</html>

<!-- <style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style> -->
