---
import "@pagefind/default-ui/css/ui.css";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { SITE } from "@/config";

const backUrl = SITE.showBackButton ? `${Astro.url.pathname}` : "/";

const metadata = {
  title:
    "V.Vidhya - Your Virtual Path To Knowledge | Computer Education for All",
  description:
    "Learn top computer courses with V.Vidhya. From programming to graphic design, boost your skills and indulge your creativity to do real work with the help of technology.",
};
---

<Layout
  title={`${metadata.title} | ${SITE.title}`}
  description=`${metadata.description}`
>
  <Header />
  <main
    class="mx-auto mb-24 w-full max-w-mdsm px-6 2xs:px-4 xs:px-2 sm:max-w-lg md:max-w-2xl lg:max-w-3xl xl:px-0 2xl:max-w-4xl"
  >
    <div id="pagefind-search" transition:persist data-backurl={backUrl}></div>
  </main>
  <Footer />

  <script>
    function initSearch() {
      const pageFindSearch: HTMLElement | null =
        document.querySelector("#pagefind-search");

      if (!pageFindSearch) return;

      const params = new URLSearchParams(window.location.search);

      const onIdle = window.requestIdleCallback || (cb => setTimeout(cb, 1));

      onIdle(async () => {
        // @ts-expect-error â€” Missing types for @pagefind/default-ui package.
        const { PagefindUI } = await import("@pagefind/default-ui");

        // Display warning in dev mode
        // if (import.meta.env.DEV) {
        //   pageFindSearch.innerHTML = `
        //     <div class="bg-muted/75 rounded p-4 space-y-4 mb-4">
        //       <p><strong>DEV mode Warning! </strong>You need to build the project at least once to see the search results during development.</p>
        //       <code class="block bg-black text-white px-2 py-1 rounded">pnpm run build</code>
        //     </div>
        //   `;
        // }

        // Init pagefind ui
        const search = new PagefindUI({
          element: "#pagefind-search",
          showSubResults: true,
          showImages: false,
          processTerm: function (term: string) {
            params.set("q", term); // Update the `q` parameter in the URL
            history.replaceState(history.state, "", "?" + params.toString()); // Push the new URL without reloading

            const backUrl = pageFindSearch?.dataset?.backurl;
            sessionStorage.setItem(
              "backUrl",
              backUrl + "?" + params.toString()
            );

            return term;
          },
        });

        // If search param exists (eg: search?q=astro), trigger search
        const query = params.get("q");
        if (query) {
          search.triggerSearch(query);
        }

        // Reset search param if search input is cleared
        const searchInput = document.querySelector(
          ".pagefind-ui__search-input"
        );
        const clearButton = document.querySelector(
          ".pagefind-ui__search-clear"
        );
        searchInput?.addEventListener("input", resetSearchParam);
        clearButton?.addEventListener("click", resetSearchParam);

        function resetSearchParam(e: Event) {
          if ((e.target as HTMLInputElement)?.value.trim() === "") {
            history.replaceState(history.state, "", window.location.pathname);
          }
        }
      });
    }

    document.addEventListener("astro:after-swap", () => {
      const pagefindSearch = document.querySelector("#pagefind-search");

      // if pagefind search form already exists, don't initialize search component
      if (pagefindSearch && pagefindSearch.querySelector("form")) return;

      initSearch();
    });
    initSearch();
  </script>
</Layout>
